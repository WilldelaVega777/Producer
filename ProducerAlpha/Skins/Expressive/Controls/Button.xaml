<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"                    
>


    <!-- ================================================================================================ -->

    <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <!-- General Properties -->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource DDButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DDButtonNormalBorder}"/>

        <!-- Control Template -->
        <Setter Property="Template">

            <!-- UI -->
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">


                        <Border x:Name="Border" BorderThickness="1" Padding="0" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" />

                        <!-- ===================================================================================== -->

                        <Border x:Name="Hover" BorderThickness="1" Padding="1" BorderBrush="{DynamicResource DarkBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->
                        <Border x:Name="Pressed" BorderThickness="1" Padding="1" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="DarkGray"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->
                        <Border x:Name="Disabled" BorderThickness="1" Padding="1" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="#585858"/>
                            </Border.Background>
                        </Border>
                        
                        <!-- ===================================================================================== -->

                        <Border x:Name="DDBSubSelected" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->

                        <Rectangle x:Name="Shine" Opacity="1" Stroke="{x:Null}" RadiusX="3" RadiusY="3" Margin="1,1,1,1" VerticalAlignment="Stretch" Height="Auto">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                                    <GradientStop Color="#26FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#26FFFFFF" Offset="0.467" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.475" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <!-- ===================================================================================== -->

                        <ContentPresenter x:Name="Cp" 
							              HorizontalAlignment="Stretch" 
							              VerticalAlignment="Stretch"
							              SnapsToDevicePixels="True"
                                          TextBlock.Foreground="White"
                                          Margin="4,0,4,2"
                            />


                    </Grid>


                    <!-- Action Triggers -->
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="Hover" Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="Pressed" Value="0.1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Path.Stroke" TargetName="Cp" Value="#CDCDCD"/>
                            <Setter Property="Path.Fill" TargetName="Cp" Value="#CDCDCD"/>
                            <Setter Property="Opacity" TargetName="Disabled" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>


                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>


    <!-- ================================================================================================ -->

    <Style x:Key="RedButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <!-- General Properties -->
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource DDButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DDButtonNormalBorder}"/>

        <!-- Control Template -->
        <Setter Property="Template">

            <!-- UI -->
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">


                        <Border x:Name="Border" BorderThickness="1" Padding="0" Background="{DynamicResource RedBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" />

                        <!-- ===================================================================================== -->

                        <Border x:Name="Hover" BorderThickness="1" Padding="1" BorderBrush="{DynamicResource DarkBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->
                        <Border x:Name="Pressed" BorderThickness="1" Padding="1" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="DarkGray"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->
                        <Border x:Name="Disabled" BorderThickness="1" Padding="1" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="#585858"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->

                        <Border x:Name="DDBSubSelected" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.Background>
                        </Border>

                        <!-- ===================================================================================== -->

                        <Rectangle x:Name="Shine" Opacity="1" Stroke="{x:Null}" RadiusX="3" RadiusY="3" Margin="1,1,1,1" VerticalAlignment="Stretch" Height="Auto">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                                    <GradientStop Color="#26FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#26FFFFFF" Offset="0.467" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.475" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <!-- ===================================================================================== -->

                        <ContentPresenter x:Name="Cp" 
							              HorizontalAlignment="Stretch" 
							              VerticalAlignment="Stretch"
							              SnapsToDevicePixels="True"
                                          Margin="4,0,4,2"
                            />


                    </Grid>


                    <!-- Action Triggers -->
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="Hover" Value="0.5"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="Pressed" Value="0.1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Path.Stroke" TargetName="Cp" Value="#CDCDCD"/>
                            <Setter Property="Path.Fill" TargetName="Cp" Value="#CDCDCD"/>
                            <Setter Property="Opacity" TargetName="Disabled" Value="0.5"/>
                        </Trigger>

                    </ControlTemplate.Triggers>


                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>



    <!-- ==================================================================================================================== -->
    
    <Style x:Key="InvisibleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid" Opacity="0.6" Cursor="Hand">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0"/>
                        
                        <Border x:Name="Hover" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.Background>
                        </Border>
                        
                        <Border x:Name="Pressed" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="DarkGray"/>
                            </Border.Background>
                        </Border>
                        
                        <Rectangle Opacity="0" Stroke="{x:Null}" RadiusX="3" RadiusY="3" Margin="2,2,2,2" VerticalAlignment="Stretch" Height="Auto" x:Name="Shine">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                                    <GradientStop Color="#26FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#26FFFFFF" Offset="0.467" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.475" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,4,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">

                        </Trigger>


                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="Grid" Value="0.8"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="Grid" Value="1"/>
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="true">
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Grid" Value="0.3"/>
                            <Setter Property="Cursor" TargetName="Grid" Value="Arrow"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================================================================================================================== -->

    <Style x:Key="InvisibleButtonWithNoTriggers" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid" Opacity="1" Cursor="Hand">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0"/>

                        <Border x:Name="Hover" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}"/>
                            </Border.Background>
                        </Border>

                        <Border x:Name="Pressed" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="3,3,3,3" Opacity="0" >
                            <Border.Background>
                                <SolidColorBrush Color="DarkGray"/>
                            </Border.Background>
                        </Border>

                        <Rectangle Opacity="0" Stroke="{x:Null}" RadiusX="3" RadiusY="3" Margin="2,2,2,2" VerticalAlignment="Stretch" Height="Auto" x:Name="Shine">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                                    <GradientStop Color="#26FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#26FFFFFF" Offset="0.467" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.475" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">

                        </Trigger>

                        <Trigger Property="IsEnabled" Value="true">
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="Grid" Value="0.3"/>
                            <Setter Property="Cursor" TargetName="Grid" Value="Arrow"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ====================================================================================================================================== -->
    
    <Style x:Key="WelcomeButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bd" CornerRadius="3,3,3,3" Padding="5,0,0,0">
                        <ContentPresenter TextBlock.FontSize="16" TextBlock.FontFamily="Calibri" TextBlock.FontWeight="Bold" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" Margin="5,1,0,1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" TargetName="bd" Value="#FF29367B"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ====================================================================================================================================== -->
    
    <Style x:Key="RecentFileButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bd" CornerRadius="3,3,3,3" Padding="20,0,0,0">
                        <ContentPresenter TextBlock.FontSize="12" TextBlock.FontWeight="Normal" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" Margin="5,1,0,1"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" TargetName="bd" Value="#FF29367B"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ====================================================================================================================================== -->
    <Style x:Key="GoToSyncLinkButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Image Name="Normal" Source="{DynamicResource imgGoToSyncLinkNormal}" Opacity="0.8" />
                        <Image Name="Pressed" Source="{DynamicResource imgGoToSyncLinkPressed}" Visibility="Hidden" Opacity="0.9"/>
                        <Image Name="Disabled" Source="{DynamicResource imgGoToSyncLinkDisabled}" Visibility="Hidden" Opacity="0.7"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Pressed" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Normal" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Disabled" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>
