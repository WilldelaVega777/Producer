<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"                    
>


    <!-- ==================================================================================================================== -->
    <!--                 EXPANDER BRUSHES                                                                                     -->
    <!-- ==================================================================================================================== -->

    <!-- Expander Solid Brushes -->
    <SolidColorBrush x:Key="ExpanderToggleButtonExpanderGlyphBrush" Color="#FF3C3C3C"/>
    <SolidColorBrush x:Key="ExpanderToggleButtonNormalSecondBackgroundBrush" Color="#FF2D2C2C"/>
    <SolidColorBrush x:Key="ExpanderToggleButtonNormalFirstBorderBrush" Color="#FF373737"/>
    <SolidColorBrush x:Key="ExpanderToggleButtonNormalSecondBorderBrush" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ExpanderSolidBorderBrush" Color="#00CCCCCC"/>
    <SolidColorBrush x:Key="ExpanderToggleButtonDisabledForegroundBrush" Color="#888"/>
    <SolidColorBrush x:Key="ExpanderToggleButtonDisabledBackgroundBrush" Color="#FF505050"/>
    <SolidColorBrush x:Key="ExpanderToggleButtonDisabledBorderBrush" Color="#FF6A6A6A"/>
    <SolidColorBrush x:Key="ExpanderBackgroundBrush" Color="#881B1B1B"/>
    <SolidColorBrush x:Key="ExpanderDisabledForegroundBrush" Color="#888"/>
    <SolidColorBrush x:Key="ExpanderDisabledBackgroundBrush" Color="#FFE7E7E7"/>
    <SolidColorBrush x:Key="ExpanderDisabledBorderBrush" Color="#FF6A6A6A"/>
    <SolidColorBrush x:Key="ExpanderMainColorBrush" Color="#FF595959"/>
    <SolidColorBrush x:Key="ExpanderHeaderColorBrush" Color="#FF595959"/>

    <!-- Expander Gradient Brushes -->
    <LinearGradientBrush x:Key="ExpanderLightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0"/>
        <GradientStop Color="#FF232121" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ExpanderNormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FF585656" Offset="0"/>
        <GradientStop Color="#FF161616" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ExpanderToggleButtonNormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CCC" Offset="0.0"/>
        <GradientStop Color="#444" Offset="1.0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ExpanderToggleButtonNormalFirstBackgroundBrush" StartPoint ="0,0" EndPoint ="0,1">
        <GradientStop Color ="#FF707070" Offset ="0"/>
        <GradientStop Color ="#FF1A1A1A" Offset ="0.495"/>
        <GradientStop Color ="#FF707070" Offset ="1"/>
    </LinearGradientBrush>

    <!-- Expander Tile Brushes -->
    <DrawingBrush x:Key="ExpanderToggleButtonNormalThirdBackgroundBrush">
        <DrawingBrush.Drawing>
            <GeometryDrawing>
                <GeometryDrawing.Brush>
                    <LinearGradientBrush Opacity ="0.6" StartPoint ="0,0" EndPoint ="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color ="White" Offset ="0"/>
                            <GradientStop Color ="#AAFFFFFF" Offset ="1"/>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </GeometryDrawing.Brush>
                <GeometryDrawing.Geometry>
                    <EllipseGeometry Center ="0.5,0.5" RadiusX ="0.25" RadiusY ="0.35"/>
                </GeometryDrawing.Geometry>
            </GeometryDrawing>
        </DrawingBrush.Drawing>
        <DrawingBrush.RelativeTransform>
            <ScaleTransform CenterX ="0.5" CenterY ="0" ScaleX ="1" ScaleY ="0.5"/>
        </DrawingBrush.RelativeTransform>
    </DrawingBrush>

    <!-- ==================================================================================================================== -->
    <!--                 EXPANDER CONTROL TEMPLATE  1st Level is a Triangle                                                   -->
    <!-- ==================================================================================================================== -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Canvas x:Name="MainButtonContainer" Cursor="Hand">
            <!-- Triangle ToggleButton -->
            <Ellipse x:Name ="BackGrad" Fill="#01000000" Canvas.ZIndex="1" Canvas.Left="1" Canvas.Top="2" Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center"/>
            <Polygon x:Name="Arrow"
			  Canvas.ZIndex="2"
			  Canvas.Left="12"
			  Canvas.Top="9"
			  Stroke="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}" 
			  Fill="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}"
			  StrokeThickness="2" 
			  HorizontalAlignment="Center" 
			  VerticalAlignment="Center"
              RenderTransformOrigin="0.5,0.5"
		>
                <Polygon.Points>
                    <Point X="0" Y="4" />
                    <Point X="2" Y="0" />
                    <Point X="4" Y="4" />
                </Polygon.Points>

                <Polygon.RenderTransform>
                    <RotateTransform x:Name="ArrowRotateTransform" Angle="90"/>
                </Polygon.RenderTransform>

            </Polygon>
        </Canvas>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName ="Arrow"
									     Storyboard.TargetProperty ="(Polygon.RenderTransform).(RotateTransform.Angle)"
									     To ="180"
									     Duration ="0:0:0.1"
					    />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName ="Arrow"
								     Storyboard.TargetProperty ="(Polygon.RenderTransform).(RotateTransform.Angle)"
								     To ="90"
								     Duration ="0:0:0.1"
				    />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <!-- ==================================================================================================================== -->
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ExpanderMainColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" x:Name="ContentRow"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4,4,4,4" Grid.Row="0" Margin="0,0,0,0" x:Name="Border" Background="{DynamicResource ExpanderHeaderColorBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Template="{DynamicResource ExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>
                                <ContentPresenter TextBlock.Foreground="White"  Grid.Column="1" Margin="4" TextBlock.FontSize="11" RecognizesAccessKey="True" ContentSource="Header" TextBlock.FontWeight="Bold"/>

                            </Grid>
                        </Border>
                        <Border Visibility="Collapsed" Grid.Row="1" x:Name="ExpandSite" RenderTransformOrigin="0,0.0" Background="{DynamicResource ExpanderMainColorBrush}" BorderBrush="{DynamicResource ExpanderMainColorBrush}" BorderThickness="2,0,2,0" CornerRadius="0,0,4,4">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleY ="0"/>
                            </Border.RenderTransform>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="RenderTransform.ScaleY"            
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="RenderTransform.ScaleY"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                            <Setter Property="CornerRadius" TargetName="Border" Value ="4,4,0,0" />
                        </Trigger>

                        <Trigger Property="Expander.IsExpanded" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="RenderTransform.ScaleY"
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="RenderTransform.ScaleY"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ExpanderDisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ExpanderDisabledBorderBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderDisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ==================================================================================================================== -->
    <!--                 EXPANDER CONTROL TEMPLATE  NOXPAND                                                                   -->
    <!-- ==================================================================================================================== -->
    <Style x:Key="NoXpand" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ExpanderMainColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" x:Name="ContentRow"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4,4,0,0" Grid.Row="0" Margin="0,0,0,0" x:Name="Border" Background="{DynamicResource ExpanderHeaderColorBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Visibility="Collapsed" Template="{DynamicResource ExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>
                                <ContentPresenter Grid.Column="1" Margin="4" RecognizesAccessKey="True" ContentSource="Header" TextBlock.FontWeight="Bold"/>

                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ExpandSite" Background="{DynamicResource ExpanderMainColorBrush}" BorderBrush="{DynamicResource ExpanderMainColorBrush}" BorderThickness="2,0,2,0" CornerRadius="0,0,4,4">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ==================================================================================================================== -->
    <!--                 EXPANDER CONTROL TEMPLATE  2nd Level is a Triangle inside of a circle                                -->
    <!-- ==================================================================================================================== -->
    <ControlTemplate x:Key="SecondLevelExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Canvas x:Name="MainButtonContainer" Cursor="Hand">
            <!-- Triangle ToggleButton -->
            <Ellipse x:Name ="Circle" Fill="#ff333333" Canvas.ZIndex="1" Canvas.Left="3" Canvas.Top="3.8" Height="15" Width="15" HorizontalAlignment="Center" VerticalAlignment ="Center"/>
            <Polygon x:Name="Arrow"
			  Canvas.ZIndex="2"
			  Canvas.Left="7"
			  Canvas.Top="9"
			  Stroke="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}" 
			  Fill="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}"
			  StrokeThickness="2" 
			  HorizontalAlignment="Center" 
			  VerticalAlignment="Center"
              RenderTransformOrigin="0.5,0.5"
		>
                <Polygon.Points>
                    <Point X="0" Y="4" />
                    <Point X="2" Y="0" />
                    <Point X="4" Y="4" />
                </Polygon.Points>

                <Polygon.RenderTransform>
                    <RotateTransform x:Name="ArrowRotateTransform" Angle="90"/>
                </Polygon.RenderTransform>

            </Polygon>
        </Canvas>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName ="Arrow"
									     Storyboard.TargetProperty ="(Polygon.RenderTransform).(RotateTransform.Angle)"
									     To ="180"
									     Duration ="0:0:0.1"
					        />
                            <DoubleAnimation Storyboard.TargetName ="Arrow"
									     Storyboard.TargetProperty ="(Polygon.RenderTransform).(TranslateTransform.X)"
									     To ="180"
									     Duration ="0:0:0.1"
					        />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName ="Arrow"
								     Storyboard.TargetProperty ="(Polygon.RenderTransform).(RotateTransform.Angle)"
								     To ="90"
								     Duration ="0:0:0.1"
				    />
                        </Storyboard>
                    </BeginStoryboard>
                    
                </Trigger.ExitActions>
                <Setter Property="Canvas.Left" TargetName="Circle" Value ="3.3" />
            </Trigger>
        </ControlTemplate.Triggers>


    </ControlTemplate>

    <!-- ==================================================================================================================== -->
    <Style x:Key="SecondLevelExpander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ExpanderLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderNormalBorderBrush}"/>
        <Setter Property="TextBlock.Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" x:Name="ContentRow"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4,4,4,4" Grid.Row="0" x:Name="Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Template="{DynamicResource SecondLevelExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>
                                <ContentPresenter TextBlock.Foreground="White" Grid.Column="1" Margin="4,2,0,2" RecognizesAccessKey="True" ContentSource="Header" TextBlock.FontWeight="Normal"/>

                            </Grid>
                        </Border>
                        <Border Visibility="Collapsed" Grid.Row="1" x:Name="ExpandSite" Background="Transparent" BorderBrush="{DynamicResource ExpanderSolidBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleY ="0"/>
                            </Border.LayoutTransform>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="LayoutTransform.ScaleY"            
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="LayoutTransform.ScaleY"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>

                        <Trigger Property="Expander.IsExpanded" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="LayoutTransform.ScaleY"            
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="LayoutTransform.ScaleY"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ExpanderDisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ExpanderDisabledBorderBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderDisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ==================================================================================================================== -->
    <!--                 PANEL EXPANDER CONTROL TEMPLATE                                                                      -->
    <!-- ==================================================================================================================== -->
    <ControlTemplate x:Key="PanelExpanderToggleButton" TargetType="{x:Type ToggleButton}">

        <Canvas x:Name="MainButtonContainer" Cursor="Hand" RenderTransformOrigin="0.5,0.5" Width="18" Height="12">
            <!-- Arrow ToggleButton -->
            <Rectangle x:Name ="BackGrad" Fill="#01000000" Height="12" Width="16" HorizontalAlignment="Center" VerticalAlignment ="Center" StrokeThickness="0"/>

            <Canvas x:Name="OpenGlyph" Width="16" Height="16" Canvas.Left="0" Canvas.Top="0">
                <Viewbox Width="16.584" Height="12.2141" Canvas.Left="-0.236249" Canvas.Top="0.130912">
                    <Canvas Width="16.584" Height="12.2141">
                        <Path Width="16.584" Height="9.32047" Canvas.Left="3.57628e-007" Canvas.Top="2.89359" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" Stroke="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}" Fill="Transparent" Data="F1 M 1,3.89359L 8.2991,11.2141L 15.584,3.90784"/>
                        <Ellipse RenderTransformOrigin="0.5,0.5" Width="5.87291" Height="5.90867" Canvas.Left="5.35553" Canvas.Top="0.3" Stretch="Fill" StrokeThickness="0" StrokeLineJoin="Round" Fill="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}">
                            <Ellipse.RenderTransform>
                                <ScaleTransform ScaleX="0.72" ScaleY="0.7"/>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <Canvas.RenderTransform>
                            <ScaleTransform ScaleX="1.1" ScaleY="1.052"/>
                        </Canvas.RenderTransform>
                    </Canvas>
                </Viewbox>
            </Canvas>
            
        </Canvas>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="LayoutTransform" TargetName="OpenGlyph">
                    <Setter.Value>
                        <ScaleTransform ScaleY ="-1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property ="ToggleButton.IsPressed" Value ="True">
                <Setter TargetName ="BackGrad" Property ="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X ="0" Y ="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>


    </ControlTemplate>

    <!-- ==================================================================================================================== -->
    
    <Style x:Key="PanelExpander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ExpanderLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <!-- UI -->
                    <Border x:Name="ExpanderBorder" Style="{DynamicResource AppPanel}" Background="Transparent">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Name="AnimatedTransparencyBorderBrush" Color="#22393939"/>
                        </Border.BorderBrush>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="12"/>
                                <RowDefinition Height="*" x:Name="ContentRow"/>
                            </Grid.RowDefinitions>
                            <Border CornerRadius="2,2,0,0" Grid.Row="0" x:Name="Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter TextBlock.Foreground="White" Grid.Column="0" Margin="0" RecognizesAccessKey="True" ContentSource="Header"/>
                                    <ToggleButton Grid.Column="1" HorizontalAlignment="Center" Template="{DynamicResource PanelExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>

                                </Grid>
                            </Border>
                            <Border Visibility="Collapsed" Grid.Row="1" x:Name="ExpandSite" Background="Transparent" BorderBrush="{DynamicResource ExpanderSolidBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                                <Border.LayoutTransform>
                                    <ScaleTransform ScaleY ="0"/>
                                </Border.LayoutTransform>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
                            </Border>
                        </Grid>
                    </Border>

                    <!-- Triggers -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="LayoutTransform.ScaleY"            
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                        <ColorAnimation  Storyboard.TargetName ="AnimatedTransparencyBorderBrush"
                                             Storyboard.TargetProperty="Color"
											 To ="#FF282827"
											 Duration ="0:0:0.20"
							/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="LayoutTransform.ScaleY"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />

                                        <ColorAnimation  Storyboard.TargetName ="AnimatedTransparencyBorderBrush"
                                             Storyboard.TargetProperty="Color"
											 To ="#22393939"
											 Duration ="0:0:0.35"
							/>

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>

                        <Trigger Property="Expander.IsExpanded" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="LayoutTransform.ScaleY"            
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="0" 
											 Duration ="0:0:0.05"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="LayoutTransform.ScaleY"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="1" 
									   Duration ="0:0:0.7"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ExpanderDisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ExpanderDisabledBorderBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderDisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    
    <!-- ==================================================================================================================== -->
    <!-- SQUARED STYLE EXPANDER                                                                                               -->
    <!-- ==================================================================================================================== -->
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================================================================================================================== -->

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                            <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                            <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                            <ContentPresenter TextBlock.Foreground="White" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource MouseOverBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================================================================================================================== -->

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,4,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource MouseOverBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================================================================================================================== -->

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="2,2,2,2" BorderThickness="1,1,1,1" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource MouseOverBrush}" />

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ==================================================================================================================== -->

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="2,2,2,2" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="4,4,2,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ==================================================================================================================== -->
    <!-- SQUARED STYLE EXPANDER                                                                                               -->
    <!-- ==================================================================================================================== -->
    <Style x:Key="SquaredStyledExpander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3">
                        <DockPanel>
                            <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{DynamicResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{DynamicResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" />
                            <Border Visibility="Collapsed" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="3,3,3,3" x:Name="border" Margin="1,1,1,1">
                                <ContentPresenter TextBlock.Foreground="White" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="border" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" />
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{DynamicResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ==================================================================================================================== -->
    <!--                 EXPANDER CONTROL TEMPLATE  3D Bubble                                                                 -->
    <!-- ==================================================================================================================== -->
    <ControlTemplate x:Key="3DBubbleExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Ellipse x:Name ="BackGrad" Fill="{DynamicResource ExpanderToggleButtonNormalFirstBackgroundBrush}" Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" StrokeThickness="1" Stroke ="{DynamicResource ExpanderToggleButtonNormalFirstBorderBrush}"/>
            <Ellipse Fill="{DynamicResource ExpanderToggleButtonNormalSecondBackgroundBrush}" Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" Stroke ="Transparent" x:Name ="FadeMask" StrokeThickness="1" Opacity ="0"/>
            <Path x:Name="Arrow" Stroke="{DynamicResource ExpanderToggleButtonNormalSecondBorderBrush}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"  SnapsToDevicePixels="False" Data="M1,1.5 L4.5,5 8,1.5"/>
            <Ellipse Fill="{DynamicResource ExpanderToggleButtonNormalThirdBackgroundBrush}" Height="19" Width="19" HorizontalAlignment="Center" VerticalAlignment ="Center" x:Name ="Highlight" StrokeThickness ="2" Stroke ="Transparent"/>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="LayoutTransform" TargetName="Arrow">
                    <Setter.Value>
                        <ScaleTransform ScaleY ="-1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property ="ToggleButton.IsPressed" Value ="True">
                <Setter TargetName ="BackGrad" Property ="RenderTransform">
                    <Setter.Value>
                        <TranslateTransform X ="0" Y ="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>


    </ControlTemplate>

    <!-- 3D Bubble Expander -->
    <Style x:Key="3dBubbleExpander" TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ExpanderLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ExpanderNormalBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" x:Name="ContentRow"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Grid.Row="0" x:Name="Border" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Template="{DynamicResource 3DBubbleExpanderToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>

                                <ContentPresenter TextBlock.Foreground="White" Grid.Column="1" Margin="4" RecognizesAccessKey="True" ContentSource="Header"/>
                            </Grid>
                        </Border>
                        <Border Visibility="Collapsed" Grid.Row="1" x:Name="ExpandSite" Background="Transparent" BorderBrush="{DynamicResource ExpanderSolidBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleY ="0"/>
                            </Border.LayoutTransform>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="LayoutTransform.ScaleY"            
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="1" 
											 Duration ="0:0:0.25"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="LayoutTransform.ScaleY"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="0" 
									   Duration ="0:0:0.25"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>

                        <Trigger Property="Expander.IsExpanded" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
											 Storyboard.TargetProperty ="LayoutTransform.ScaleY"            
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
							                 Storyboard.TargetProperty="Opacity"
											 To ="0" 
											 Duration ="0:0:0.25"
							/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>


                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty ="LayoutTransform.ScaleY"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                        <DoubleAnimation Storyboard.TargetName ="ExpandSite"
					                   Storyboard.TargetProperty="Opacity"
									   To ="1" 
									   Duration ="0:0:0.25"
					  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Visibility" TargetName="ExpandSite" Value ="Visible" />
                        </Trigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ExpanderDisabledBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ExpanderDisabledBorderBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{DynamicResource ExpanderDisabledForegroundBrush}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>