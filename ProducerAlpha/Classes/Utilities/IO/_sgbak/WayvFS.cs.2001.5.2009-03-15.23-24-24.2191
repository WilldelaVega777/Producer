using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Xml.Serialization;

namespace ProducerAlpha
{
    class WayvFS
    {
        //-------------------------------------------------------------------------------------------
        // Private Fields Section
        //-------------------------------------------------------------------------------------------

        //-------------------------------------------------------------------------------------------
        // Public Properties Section
        //-------------------------------------------------------------------------------------------


        //-------------------------------------------------------------------------------------------
        // Constructor Method Section
        //-------------------------------------------------------------------------------------------


        //-------------------------------------------------------------------------------------------
        // Singleton Pattern Section
        //-------------------------------------------------------------------------------------------


        //-------------------------------------------------------------------------------------------
        // Public Static Methods Section
        //-------------------------------------------------------------------------------------------
        public static bool CheckIfProjectExists(string sPath)
        {
            bool bRetVal = false;

            if (Directory.Exists(Path.GetDirectoryName(sPath)))
            {
                bRetVal = true;
            }

            return bRetVal;
        }

        //-------------------------------------------------------------------------------------------
        public static bool CheckIfProjectFileExists(string sPath)
        {
            Boolean bRetVal = false;

            DirectoryInfo d = new DirectoryInfo(System.IO.Path.GetDirectoryName(sPath));

            if (d.Exists)
            {
                foreach (FileInfo f in d.GetFiles())
                {
                    if (f.Extension == ".wayvproj")
                    {
                        bRetVal = true;
                    }
                }
            }

            return bRetVal;
        }

        //-------------------------------------------------------------------------------------------
        public static void CreateEmptyProject(string sPath)
        {
            if (!Directory.Exists(Path.GetDirectoryName(sPath)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(sPath));
                Directory.CreateDirectory(Path.GetDirectoryName(sPath) + @"\" + "Resources");
            }

            if (!File.Exists(sPath))
            {
                File.Create(sPath);
            }

        }

        //-------------------------------------------------------------------------------------------
        public static void SaveShow(Show pShow)
        {
            XmlSerializer xml = new XmlSerializer(typeof(Show));
            using (Stream stream = new FileStream(pShow.FullyQualifiedFileName,
                   FileMode.Create, FileAccess.Write, FileShare.None))
            {
                xml.Serialize(stream, pShow);
            }
        }

        //-------------------------------------------------------------------------------------------
        public static Show OpenShow(string sPath)
        {
            Show shRetVal = null;

            XmlSerializer serializer = new XmlSerializer(typeof(Show));
            TextReader tr = new StreamReader(sPath);
            shRetVal = (Show)serializer.Deserialize(tr);
            tr.Close();

            return shRetVal;
        }

        //-------------------------------------------------------------------------------------------
        // Publish Functionality Methods
        //-------------------------------------------------------------------------------------------
        public static void CreateFrame(string sPath, int pNumber)
        {
            if (!Directory.Exists(Path.GetDirectoryName(sPath)))
            {
                Directory.CreateDirectory(Path.GetDirectoryName(sPath) + @"\" + "Frames" + @"\" + pNumber.ToString().PadLeft(4,'0'));
            }
        }

        //-------------------------------------------------------------------------------------------
        public static void AddResourceToFrame(string sPath, string pSourcePath, int pFrameNumber, string pResourceName)
        {
            if (!Directory.Exists(Path.GetDirectoryName(sPath) + @"\" + "Frames" + @"\" + pFrameNumber.ToString().PadLeft(4, '0')))
            {
                if (File.Exists(Path.GetDirectoryName(pSourcePath) +
                                    @"\" +
                                    "Frames" +
                                    @"\" +
                                    pFrameNumber.ToString().PadLeft(4, '0') +
                                    @"\" + pResourceName)
                    )
                {

                }


            }
            else
            {
                throw new ProducerAlphaException("Resource already exists, please delete it first");
            }
        }

        //-------------------------------------------------------------------------------------------
        // Private Methods Section
        //-------------------------------------------------------------------------------------------
        internal static string GetNextProjectName()
        {
            string sRetVal = "";
            int iCounter = 1;
            while (Directory.Exists((App.BaseProjectPath + @"\" + "Project" + iCounter.ToString())))
            {
                iCounter++;
            }

            sRetVal = "Project" + iCounter.ToString();

            return sRetVal;
        }
    }
}
